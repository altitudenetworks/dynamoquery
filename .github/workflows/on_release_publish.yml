name: Bump version, update CHANGELOG.md and publish

on:
  release:
    types: [published]

jobs:
  bump:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v1
        with:
          python-version: "3.9"
      - name: Get Release tag
        uses: actions/github-script@v3
        id: tag
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          result-encoding: string
          script: |
            const result = context.payload.release.tag_name
            console.log(result)
            return result
      - name: Get Release body
        uses: actions/github-script@v3
        id: body
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          result-encoding: string
          script: |
            const result = context.payload.release.body
            console.log(result)
            return result
      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install -U wheel logchange newversion
      - name: Get Release version
        id: version
        env:
          TAG: ${{ steps.tag.outputs.result }}
        run: |
          VERSION=`echo ${TAG} | python -m newversion`
          echo "${VERSION}"
          echo "::set-output name=result::${VERSION}"
      - name: Update CHANGELOG.md
        env:
          VERSION: ${{ steps.version.outputs.result }}
          NOTES: "${{ steps.body.outputs.result }}"
        run: |
          echo "${NOTES}" | python -m logchange add "${VERSION}"
          python -m logchange set unreleased -i ""
      - name: Bump version
        env:
          VERSION: ${{ steps.version.outputs.result }}
        run: |
          if [[-f pyproject.toml ]]; then
            sed -i -E "s/^version\s*=\s*\".+/version = \"${VERSION}\"/" pyproject.toml
          fi
          if [[-f setup.cfg ]]; then
            sed -i -E "s/^version \s*=\s*.+/version = ${VERSION}/" setup.cfg
          fi
      - name: Commit changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ steps.version.outputs.result }}
        run: |
          git config --global user.email "volshebnyi@gmail.com"
          git config --global user.name "${GITHUB_ACTOR}"
          git add pyproject.toml
          git add setup.cfg
          git add CHANGELOG.md
          git checkout -b release/${VERSION}
          git commit -m "Bump version to ${VERSION}"
          git push https://${GITHUB_ACTOR}:${GITHUB_TOKEN}@github.com/${{ context.repo.owner }}/${{ context.repo.repo }}.git HEAD:release/${VERSION}
