name: Create release PR

on:
  release:
    types:
      - published

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Checkout master branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git fetch --all
          git checkout master
          git pull
      - name: Get release version
        id: version
        uses: actions/github-script@v3
        with:
          result-encoding: string
          script: |
            return context.ref.split('/').pop()
      - name: Get release data
        id: release
        uses: actions/github-script@v3
        with:
          script: |
            const newVersion = '${{ steps.version.outputs.result }}'

            const response = await github.repos.getReleaseByTag({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag: newVersion,
            })
            console.log('release', response.data)
            return response.data
      - name: Get release notes
        id: release-notes
        uses: actions/github-script@v3
        with:
          result-encoding: string
          script: |
            const release = ${{ steps.release.outputs.result }}
            return release.body.replace('\r\n', '\n')
      - name: Update version
        uses: actions/github-script@v3
        with:
          result-encoding: string
          script: |
            const fs = require('fs')

            const newVersion = '${{ steps.version.outputs.result }}'

            fs.writeFileSync('dynamo_query/version.txt', `${newVersion}\n`)
      - name: Update changelog
        uses: actions/github-script@v3
        with:
          result-encoding: string
          script: |
            const fs = require('fs')
            const strip = s => s.replace(/^\s+|\s+$/g, '')

            const version = '${{ steps.version.outputs.result }}'
            const release = ${{ steps.release.outputs.result }}
            const changelog = fs.readFileSync('CHANGELOG.md', 'utf-8')
            console.log(changelog)

            const releaseNotes = release.body.replace('\r\n', '\n')
            const releasedMarker = '# [Released]'
            const releasedMarkerIndex = changelog.indexOf(releasedMarker)
            const [head, ...tails] = changelog.split(releasedMarker)
            const tail = tails.join(releasedMarker)

            const dateNow = new Date().toISOString().split('T')[0]
            const newSection = `## [${strip(version)}] - ${dateNow}\n\n${strip(releaseNotes)}`

            const newChangelog = `${strip(head)}\n\n${releasedMarker}\n\n${newSection}\n\n${strip(tail)}`

            fs.writeFileSync('CHANGELOG.md', newChangelog)
      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: release/${{ steps.version.outputs.result }}
          commit-message: Release ${{ steps.version.outputs.result }}
          labels: release, bot
          title: "[Actions] Release ${{ steps.version.outputs.result }}"
          body: |
            # Release ${{ steps.version.outputs.result }}

            Merge this PR to update version number in master and release a new version.

            ## Release notes

            ${{ steps.release-notes.outputs.result }}
