name: Lint and test changes

on:
  release:
    types:
      - published

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: "3.8"
      - name: Extract variables from env
        id: vars
        run: |
          echo "GitHub ref ${GITHUB_REF}"
          VERSION_TAG=`echo "${GITHUB_REF}" | cut -f 3 -d "/"`
          if [[ "$VERSION_TAG" != *"-release" ]]; then
            echo "Release tag should end with '-release', e.g. '1.2.3-rc1-release'"
            echo "Stopping now."
            exit 1
          fi
          VERSION=`echo "$VERSION_TAG" | sed "s/-release//"`
          echo "##[set-output name=version;]$(echo ${VERSION})"
          echo "##[set-output name=branch_name;]$(echo release/${VERSION})"
      - name: Bump version
        env:
          VERSION: ${{ steps.vars.outputs.version }}
        run: |
          echo "Bumping version to ${VERSION}"
          echo "__version__ = \"${VERSION}\"" > __version__.py
      - name: Collect changes
        id: changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ steps.vars.outputs.version }}
        run: |
          HAS_CHANGES=`git diff --stat | grep version`
          echo "Changes: ${HAS_CHANGES}"
          echo "##[set-output name=has_changes;]$(echo ${HAS_CHANGES})"
          echo "##[set-output name=branch_name;]$(echo release/${VERSION})"
      - name: Create Pull Request
        id: cpr
        if: steps.changes.outputs.has_changes
        uses: peter-evans/create-pull-request@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ steps.changes.outputs.branch_name }}
          commit-message: Release ${{ steps.vars.outputs.version }}
          labels: release, automated pr
          reviewers: vemel, amirkav
          title: "[Actions] Release ${{ steps.vars.outputs.version }}"
          body: |
            # Release ${{ steps.vars.outputs.version }}

            New version ${{ steps.vars.outputs.version }} was pushed automatically to PyPI.

            Merge this PR to update version number in master.
      - name: Check outputs
        if: steps.changes.outputs.has_changes
        run: |
          echo "Created a PR #${{ steps.cpr.outputs.pr_number }}"
